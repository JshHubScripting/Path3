local NotificationHolder = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Module.Lua"))()
local Notification = loadstring(game:HttpGet("https://raw.githubusercontent.com/BocusLuke/UI/main/STX/Client.Lua"))()

local ScreenGui = Instance.new("ScreenGui")
local Button = Instance.new("TextButton")
local UICorner = Instance.new("UICorner")

ScreenGui.Parent = game:GetService("CoreGui")
Button.Parent = ScreenGui
Button.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Button.Position = UDim2.new(0, 10, 0, 10)
Button.Size = UDim2.new(0, 150, 0, 50)
Button.Font = Enum.Font.SourceSansBold
Button.Text = "Trident.WTF"
Button.TextScaled = true
Button.TextColor3 = Color3.fromRGB(255, 0, 0)
Button.Draggable = true
Button.Active = true
Button.Selectable = true

UICorner.Parent = Button  -- Apply UI corners to the button

spawn(function()
    while true do
        for i = 0, 1, 0.05 do
            Button.TextColor3 = Color3.fromHSV(i, 1, 1)
            wait(0.05)
        end
    end
end)

local currentTarget = nil
local camera = game.Workspace.CurrentCamera
local userInputService = game:GetService("UserInputService")
local mouse = game.Players.LocalPlayer:GetMouse()

local function getClosestPlayer()
    local players = game:GetService("Players")
    local localPlayer = players.LocalPlayer
    local closestPlayer = nil
    local shortestDistance = math.huge

    for _, player in pairs(players:GetPlayers()) do
        if player ~= localPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local screenPos, onScreen = camera:WorldToViewportPoint(player.Character.HumanoidRootPart.Position)
            if onScreen then
                local distance = (Vector2.new(screenPos.X, screenPos.Y) - Vector2.new(camera.ViewportSize.X / 2, camera.ViewportSize.Y / 2)).magnitude
                if distance < shortestDistance then
                    closestPlayer = player
                    shortestDistance = distance
                end
            end
        end
    end
    return closestPlayer
end

local function lockCrosshairToTarget(target)
    if target and target.Character and target.Character:FindFirstChild("HumanoidRootPart") then
        local humanoidRootPart = target.Character.HumanoidRootPart
        local screenPos, onScreen = camera:WorldToViewportPoint(humanoidRootPart.Position)
        
        if onScreen then
            -- Move the mouse (crosshair) to the target's position
            mouse.Move:Fire(Vector2.new(screenPos.X, screenPos.Y))
        end
    end
end

local function getBodyPartHit(target)
    -- Check each body part for a hit
    for _, part in pairs(target.Character:GetChildren()) do
        if part:IsA("BasePart") and part.CanCollide then
            local screenPos, onScreen = camera:WorldToViewportPoint(part.Position)
            if onScreen then
                return part.Name
            end
        end
    end
    return "Unknown Body Part"
end

local function toggleTargeting()
    if currentTarget then
        -- Untarget the current target
        for _, part in pairs(currentTarget.Character:GetChildren()) do
            if part:IsA("BasePart") then
                part.OutlineColor3 = Color3.fromRGB(0, 0, 0)
                part.Color = Color3.fromRGB(255, 255, 255)
            end
        end
        
        Notification:Notify(
            {Title = "Trident.WTF", Description = "Untargeted: " .. currentTarget.DisplayName},
            {OutlineColor = Color3.fromRGB(80, 80, 80), Time = 5, Type = "default"}
        )
        
        currentTarget = nil
    else
        local target = getClosestPlayer()
        if target and target.Character then
            -- Target a new player
            currentTarget = target

            for _, part in pairs(target.Character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.OutlineColor3 = Color3.fromRGB(0, 0, 0)
                    part.Color = Color3.fromRGB(0, 0, 255)
                end
            end

            Notification:Notify(
                {Title = "Trident.WTF", Description = "Targeting: " .. target.DisplayName},
                {OutlineColor = Color3.fromRGB(80, 80, 80), Time = 5, Type = "default"}
            )
        end
    end
end

-- Button click event
Button.MouseButton1Click:Connect(function()
    toggleTargeting()
end)

-- Key press event for "Q"
userInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed then
        if input.KeyCode == Enum.KeyCode.Q then
            toggleTargeting()
        end
    end
end)

game:GetService("RunService").RenderStepped:Connect(function()
    if currentTarget then
        lockCrosshairToTarget(currentTarget)
        local bodyPart = getBodyPartHit(currentTarget)
        
        if bodyPart ~= "Unknown Body Part" then
            Notification:Notify(
                {Title = "Trident.WTF", Description = "Hit: " .. bodyPart},
                {OutlineColor = Color3.fromRGB(80, 80, 80), Time = 5, Type = "default"}
            )
        end
    end
end)
